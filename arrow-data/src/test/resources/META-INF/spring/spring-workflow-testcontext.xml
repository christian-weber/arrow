<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2014 Christian Weber
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:neo4j="http://www.springframework.org/schema/data/neo4j"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:data="http://www.springframework.org/schema/data/repository"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/data/neo4j
http://www.springframework.org/schema/data/neo4j/spring-neo4j.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd 
http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<neo4j:config storeDirectory="build/neo4jdb" />

	<bean class="org.arrow.service.RepositoryServiceImpl"></bean>
	<bean id="akkaRuntimeService"
		class="org.arrow.service.AkkaRuntimeService"></bean>

	<!-- <task:executor id="executor" pool-size="10" rejection-policy="ABORT"/> -->
	<bean class="org.springframework.core.task.SimpleAsyncTaskExecutor">
		<!-- <property name="concurrencyLimit" value="10"></property> -->
	</bean>

	<neo4j:repositories base-package="org.arrow.graph.repository">
		<data:exclude-filter type="regex" expression="org.arrow.graph.repository.extension.impl"/>
	</neo4j:repositories>

	<tx:annotation-driven />

	<bean class="com.thoughtworks.xstream.XStream" />

	<bean id="conversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean
					class="org.arrow.parse.converter.field.ConditionExpressionConverter.StringConverter" />
				<bean
					class="org.arrow.parse.converter.field.ConditionExpressionConverter.ObjectConverter" />
				<bean
					class="org.arrow.parse.converter.field.TimerEventDefinitionConverter.StringConverter" />
				<bean
					class="org.arrow.parse.converter.field.TimerEventDefinitionConverter.ObjectConverter" />
				<bean
					class="org.arrow.parse.converter.field.ConditionalEventDefinitionConverter.StringConverter" />
				<bean
					class="org.arrow.parse.converter.field.ConditionalEventDefinitionConverter.ObjectConverter" />
<!-- 				<bean -->
<!-- 					class="org.arrow.parse.converter.field.EventBasedGatewayTypeConverter.StringConverter" /> -->
<!-- 				<bean -->
<!-- 					class="org.arrow.parse.converter.field.EventBasedGatewayTypeConverter.ObjectConverter" /> -->
			</set>
		</property>
	</bean>

	<bean class="org.arrow.engine.impl.ProcessEngineImpl" />

	<!-- <bean class="org.arrow.actor.eventbus.LookupSignalEventBus"
		/> -->
	<bean class="org.arrow.actor.eventbus.SignalEventBus" />
	<bean class="org.arrow.actor.eventbus.MessageEventBus" />
	<bean class="org.arrow.actor.eventbus.TimerEventBus" />
	<bean class="org.arrow.actor.eventbus.ConditionEventBus" />
	<bean class="org.arrow.actor.eventbus.ErrorEventBus" />
	<bean class="org.arrow.actor.eventbus.EscalationEventBus" />
	<bean
		class="org.arrow.service.facade.impl.ExecutionServiceImpl" />
	<bean
		class="org.arrow.service.facade.impl.TimerExecutionServiceImpl" />

	<bean id="processScope" class="org.arrow.actor.scope.ProcessScope" />

	<bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
		<property name="scopes">
			<map>
				<entry key="process" value-ref="processScope" />
			</map>
		</property>
	</bean>

	<bean
		class="org.arrow.actor.config.EntityInstantiatorBeanPostProcessor" />

	<task:scheduler id="workflowScheduler" />

	<bean
		class="org.arrow.service.listener.ConditionStartEventApplicationListener" />

	<bean class="org.arrow.service.impl.BusinessConditionBean"
		id="conditionBean" />
	<bean class="org.arrow.service.impl.BusinessConditionBean"
		id="conditionBean21" />

	<bean
		class="org.arrow.invoke.condition.BusinessConditionBeanPostProcessor" />

	<bean
		class="org.arrow.actor.initializer.impl.BoundaryEventAwareInitializer" />
	<bean
		class="org.arrow.actor.initializer.impl.MultipleEventAwareInitializer" />
	<bean
		class="org.arrow.actor.initializer.impl.MultiInstanceLoopCharacteristicsExecutionInterceptor" />
	<bean
		class="org.arrow.actor.initializer.BpmnEntityInitializerAdapter" />

	<bean
		class="org.arrow.graph.repository.postprocess.infrastructure.GraphRepositoryBeanPostProcessor" />

	<bean
		class="org.arrow.graph.listener.SetTimestampBeforeSaveApplicationListener" />

	<bean class="org.arrow.test.ReportEngineAccessor" />
	<bean class="org.arrow.actor.config.AkkaConfiguration" />

	<!-- <bean class="org.arrow.runtime.execution.listener.impl.MultipleEventAwareExecutionListener"
		id="MultipleEventAwareExecutionListener" /> -->

	<bean
		class="org.arrow.graph.store.impl.ProcessInstanceStoreImpl" />

    <bean class="org.arrow.test.EngineSupport" />

</beans>
