<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2014 Christian Weber
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<definitions id="Definition"
             targetNamespace="http://www.arrow.org/test"
             xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.omg.org/spec/BPMN/20100524/MODEL">

    <process id="TRANSACTION_TEST" isExecutable="true">
        <startEvent id="startevent1" name="Start"/>
        <sequenceFlow id="flow1" targetRef="subprocess" sourceRef="startevent1"/>
        <transaction id="subprocess">
            <startEvent id="startevent2"/>
            <sequenceFlow id="flow2" targetRef="task" sourceRef="startevent2"/>
            <scriptTask id="task" scriptFormat="groovy">
                <script>println "TASK"</script>
            </scriptTask>
            <boundaryEvent id="compensateBoundaryEvent" attachedToRef="task">
                <compensateEventDefinition activityRef="compensate" />
            </boundaryEvent>

            <scriptTask id="compensation" scriptFormat="groovy" isForCompensation="true">
                <script>println "COMPENSATION"</script>
            </scriptTask>

            <sequenceFlow id="flow3" targetRef="gateway" sourceRef="task"/>

            <exclusiveGateway id="gateway" default="defaultFlow" />

            <sequenceFlow id="defaultFlow" targetRef="endevent2" sourceRef="gateway" />
            <sequenceFlow targetRef="endevent3" sourceRef="gateway">
                <conditionExpression>#error == true</conditionExpression>
            </sequenceFlow>

            <endEvent id="endevent2"/>

            <endEvent id="endevent3">
                <cancelEventDefinition/>
            </endEvent>

            <association id="asdf" sourceRef="compensateBoundaryEvent" targetRef="compensation"/>
        </transaction>
        <sequenceFlow id="flow4" targetRef="endevent1" sourceRef="subprocess"/>
        <endEvent id="endevent1"/>
    </process>

</definitions>